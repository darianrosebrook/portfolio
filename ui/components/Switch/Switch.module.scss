@use './Switch.tokens.generated.scss' as switchTokens;

.switch {
  @include switchTokens.vars;

  position: relative;
  display: inline-flex;
  gap: 0.25rem;
  align-content: center;
  align-items: center;
  max-height: 1.5rem;
  border-radius: var(--switch-size-md-track-radius);
  line-height: 1;

  &:focus-within {
    outline: var(--switch-focus-ring);
    outline-offset: var(--switch-focus-offset);
  }
}

.label {
  margin-left: 0.25rem;
  cursor: pointer;

  &::before {
    position: absolute;
    top: 50%;
    left: 0.25rem;
    display: inline-block;
    width: 1rem;
    height: 1rem;
    background-color: var(--switch-color-thumb-background-default);
    border: 1px solid var(--switch-color-track-border-default);
    border-radius: var(--switch-size-md-track-radius);
    transition:
      left var(--switch-motion-duration) var(--switch-motion-easing),
      background-color var(--switch-motion-duration) var(--switch-motion-easing),
      border-color var(--switch-motion-duration) var(--switch-motion-easing),
      right var(--switch-motion-duration) var(--switch-motion-easing);
    transform: translateY(-50%);
    content: ' ';
  }

  &.checked::before {
    left: calc(var(--switch-size-md-gap) + var(--switch-size-md-thumb-size));
    background-color: var(--switch-color-thumb-background-checked);
    transform: translate(50%, -50%);
  }
}

.input {
  all: unset;
  display: inline-flex;
  width: 3rem;
  min-width: 3rem;
  min-height: 1.5rem;
  max-height: 1.5rem;
  background-color: var(--switch-color-track-background-default);
  border: 1px solid var(--switch-color-track-border-default);
  border-radius: var(--switch-size-md-track-radius);
  transition:
    background-color var(--switch-motion-duration) var(--switch-motion-easing),
    border-color var(--switch-motion-duration) var(--switch-motion-easing);
  cursor: pointer;

  &:hover {
    background-color: var(--switch-color-track-background-hover);
  }

  &:focus {
    background-color: var(--switch-color-track-background-focus);
  }

  &:disabled {
    background-color: var(--switch-color-track-background-disabled);
    cursor: not-allowed;
  }

  &:disabled + .label {
    color: var(--switch-color-text-disabled);
    cursor: not-allowed;
  }
}

// Size variants for switch
.switch.sm {
  .input {
    width: 2.5rem;
    min-width: 2.5rem;
    min-height: 1.25rem;
    max-height: 1.25rem;
  }

  .label::before {
    top: 50%;
    left: var(--switch-size-sm-gap);
    width: 0.875rem;
    height: 0.875rem;
    transform: translateY(-50%);
  }

  .label.checked::before {
    left: calc(var(--switch-size-sm-gap) + var(--switch-size-sm-thumb-size));
  }
}

.switch.lg {
  .input {
    width: 3.5rem;
    min-width: 3.5rem;
    min-height: 1.75rem;
    max-height: 1.75rem;
  }

  .label::before {
    top: 50%;
    left: var(--switch-size-lg-gap);
    width: 1.25rem;
    height: 1.25rem;
  }

  .label.checked::before {
    left: calc(var(--switch-size-lg-gap) + var(--switch-size-lg-thumb-size));
  }
}

.input.checked {
  background-color: var(--switch-color-track-background-checked);
}

.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.description {
  position: absolute;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  width: var(--switch-size-md-gap);
  height: var(--switch-size-md-gap);
  margin: -1px;
  padding: 0;
  border-width: var(--switch-size-md-gap);
  white-space: nowrap;
}

.switchGroup {
  display: inline-flex;
  gap: var(--switch-size-md-gap);
}

.vertical {
  flex-direction: column;
  align-items: flex-start;
}

.horizontal {
  flex-direction: row;
  align-items: center;
}

@media (prefers-reduced-motion: reduce) {
  .input,
  .label::before {
    transition: none;
  }
}
