/**
 * Input Component Styles
 *
 * Uses CSS custom properties from design tokens for flexible theming
 * Supports BYODS (Bring Your Own Design System) patterns
 */

.inputWrapper {
  display: flex;
  flex-direction: column;
  gap: var(--input-spacing-gap, 8px);
  width: 100%;
}

.inputLabel {
  display: flex;
  align-items: center;
  gap: 4px;
  font-family: var(--input-typography-fontFamily, Inter, sans-serif);
  font-weight: var(--input-typography-fontWeight, 400);
  font-size: var(--input-size-medium-fontSize, 16px);
  line-height: var(--input-typography-lineHeight, 1.5);
  color: var(--input-color-foreground-default, #141414);
}

.required {
  color: var(--input-color-border-error, #ae0001);
  font-weight: 600;
}

.input {
  // Reset
  all: unset;
  box-sizing: border-box;

  // Layout
  display: block;
  width: 100%;

  // Sizing (default to medium)
  height: var(--input-size-medium-height, 40px);
  padding: var(--input-size-medium-padding, 12px 16px);

  // Typography
  font-family: var(--input-typography-fontFamily, Inter, sans-serif);
  font-weight: var(--input-typography-fontWeight, 400);
  font-size: var(--input-size-medium-fontSize, 16px);
  line-height: var(--input-typography-lineHeight, 1.5);
  letter-spacing: var(--input-typography-letterSpacing, 0);

  // Visual styling
  background-color: var(--input-color-background-default, #ffffff);
  border: var(--input-border-width, 1px) solid var(--input-color-border-default, #cecece);
  border-radius: var(--input-border-radius, 8px);
  color: var(--input-color-foreground-default, #141414);

  // Interaction
  transition: var(--input-transition-properties, border-color, box-shadow, background-color) 
              var(--input-transition-duration, 0.2s) 
              var(--input-transition-easing, ease-in-out);
  cursor: text;

  // Placeholder styling
  &::placeholder {
    color: var(--input-color-foreground-placeholder, #8f8f8f);
    opacity: 1;
  }

  // Focus state
  &:focus {
    border-color: var(--input-color-border-focus, #d9292b);
    box-shadow: var(--input-focus-boxShadow, 0 0 0 3px rgba(217, 41, 43, 0.1));
    outline: none;
  }

  // Hover state (only when not disabled or readonly)
  &:hover:not(:disabled):not(:read-only) {
    border-color: var(--input-color-border-hover, #aeaeae);
  }

  // Disabled state
  &:disabled,
  &--disabled {
    background-color: var(--input-color-background-disabled, #f0f0f0);
    border-color: var(--input-color-border-disabled, #e0e0e0);
    color: var(--input-color-foreground-disabled, #aeaeae);
    cursor: not-allowed;

    &::placeholder {
      color: var(--input-color-foreground-disabled, #aeaeae);
    }
  }

  // Readonly state
  &:read-only,
  &--readonly {
    background-color: var(--input-color-background-readonly, #fafafa);
    cursor: default;
  }

  // Size variants
  &--small {
    height: var(--input-size-small-height, 32px);
    padding: var(--input-size-small-padding, 8px 12px);
    font-size: var(--input-size-small-fontSize, 14px);
  }

  &--medium {
    height: var(--input-size-medium-height, 40px);
    padding: var(--input-size-medium-padding, 12px 16px);
    font-size: var(--input-size-medium-fontSize, 16px);
  }

  &--large {
    height: var(--input-size-large-height, 48px);
    padding: var(--input-size-large-padding, 16px 20px);
    font-size: var(--input-size-large-fontSize, 18px);
  }

  // Visual variants
  &--filled {
    background-color: var(--input-color-background-filled, #f5f5f5);
    border-color: transparent;

    &:focus {
      background-color: var(--input-color-background-default, #ffffff);
      border-color: var(--input-color-border-focus, #d9292b);
    }
  }

  &--outlined {
    background-color: transparent;
    border-width: calc(var(--input-border-width, 1px) * 2);
  }

  // State variants
  &--error {
    border-color: var(--input-color-border-error, #ae0001);

    &:focus {
      border-color: var(--input-color-border-error, #ae0001);
      box-shadow: 0 0 0 3px rgba(174, 0, 1, 0.1);
    }
  }

  &--success {
    border-color: var(--input-color-border-success, #336006);

    &:focus {
      border-color: var(--input-color-border-success, #336006);
      box-shadow: 0 0 0 3px rgba(51, 96, 6, 0.1);
    }
  }

  &--warning {
    border-color: var(--input-color-border-warning, #824500);

    &:focus {
      border-color: var(--input-color-border-warning, #824500);
      box-shadow: 0 0 0 3px rgba(130, 69, 0, 0.1);
    }
  }
}

.inputMessage {
  font-family: var(--input-typography-fontFamily, Inter, sans-serif);
  font-size: calc(var(--input-size-medium-fontSize, 16px) * 0.875);
  line-height: var(--input-typography-lineHeight, 1.5);

  &--helper {
    color: var(--input-color-foreground-placeholder, #8f8f8f);
  }

  &--error {
    color: var(--input-color-border-error, #ae0001);
  }

  &--success {
    color: var(--input-color-border-success, #336006);
  }

  &--warning {
    color: var(--input-color-border-warning, #824500);
  }
}

// Input group styling for multiple inputs
.inputWrapper + .inputWrapper {
  margin-top: var(--input-spacing-gap, 8px);
}

// Focus-within for wrapper when input is focused
.inputWrapper:focus-within {
  .inputLabel {
    color: var(--input-color-border-focus, #d9292b);
  }
}
