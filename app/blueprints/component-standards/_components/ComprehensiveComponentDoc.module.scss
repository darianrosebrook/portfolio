// Design tokens are available as CSS custom properties

.componentDoc {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

.header {
  margin-bottom: 2rem;
  padding-bottom: 2rem;
  border-bottom: 1px solid var(--semantic-color-border-subtle);
}

.headerContent {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.titleSection {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.title {
  margin: 0;
  color: var(--semantic-color-foreground-primary);
  font-weight: 700;
  font-size: 2.5rem;
}

.metadata {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.badge {
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-weight: 500;
  font-size: 0.875rem;

  &[data-type='category'] {
    background: var(--semantic-color-background-info-subtle);
    color: var(--semantic-color-foreground-info);
  }

  &[data-type='complexity'] {
    background: var(--semantic-color-background-highlight);
    color: var(--semantic-color-foreground-info);
  }

  &[data-type='status'] {
    &[data-status='built'] {
      background: var(--semantic-color-background-success-subtle);
      color: var(--semantic-color-foreground-success);
    }

    &[data-status='planned'] {
      background: var(--semantic-color-background-warning-subtle);
      color: var(--semantic-color-foreground-warning);
    }

    &[data-status='doconly'] {
      background: var(--semantic-color-background-neutral-subtle);
      color: var(--semantic-color-foreground-secondary);
    }
  }
}

.description {
  margin: 0;
  color: var(--semantic-color-foreground-secondary);
  font-size: 1.125rem;
  line-height: 1.6;
}

.aliases {
  color: var(--semantic-color-foreground-tertiary);
  font-size: 0.875rem;

  ul {
    display: inline-flex;
    gap: 0.5rem;
    margin: 0;
    padding: 0;
    list-style: none;

    li {
      &:not(:last-child)::after {
        margin-left: 0.5rem;
        opacity: 0.5;
        content: 'â€¢';
      }
    }
  }
}

.quickNav {
  position: sticky;
  top: 1rem;
  z-index: 100;
  margin-bottom: 2rem;
  padding: 1rem;
  background: var(--semantic-color-background-elevated);
  border: 1px solid var(--semantic-color-border-subtle);
  border-radius: 0.5rem;
  box-shadow: 0 2px 8px rgb(0 0 0 / 10%);

  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin: 0;
    padding: 0;
    list-style: none;

    li {
      a {
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        color: var(--semantic-color-foreground-secondary);
        font-weight: 500;
        text-decoration: none;
        transition: all 0.2s ease;
        position: relative;

        &:hover {
          background: var(--semantic-color-background-hover);
          color: var(--semantic-color-foreground-accent);
        }

        &.active {
          color: var(--semantic-color-foreground-accent);
          font-weight: 600;

          &::before {
            content: '';
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 3px;
            height: 60%;
            background: var(--semantic-color-background-highlight);
            border-radius: 0 2px 2px 0;
          }
        }
      }
    }
  }
}

.section {
  position: relative;
  isolation: isolate; // Create new stacking context
  z-index: 1;
  margin-bottom: 3rem;
  contain: layout style; // Prevent layout interference

  h2 {
    margin: 0 0 1.5rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--semantic-color-foreground-accent);
    color: var(--semantic-color-foreground-primary);
    font-weight: 600;
    font-size: 1.75rem;
  }

  h3 {
    margin: 1.5rem 0 0.75rem;
    color: var(--semantic-color-foreground-primary);
    font-weight: 600;
    font-size: 1.25rem;
  }

  // CodeSandbox components will be styled via CSS custom properties
  // Layout containment handled by component structure

  // Ensure proper spacing between sections
  & + .section {
    margin-top: 4rem;
  }
}

.overviewGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;

  @media (width <= 768px) {
    grid-template-columns: 1fr;
  }
}

.overviewContent {
  ul {
    padding-left: 1.5rem;

    li {
      margin-bottom: 0.5rem;
      line-height: 1.5;
    }
  }
}

.liveExample {
  isolation: isolate; // Create new stacking context
  contain: layout;

  .exampleContainer {
    position: relative;
    overflow: hidden;
    border: 1px solid var(--semantic-color-border-subtle);
    border-radius: 0.5rem;
    min-height: 400px;
  }
}

.anatomyContent {
  .anatomyDiagram {
    padding: 2rem;
    background: var(--semantic-color-background-secondary);
    border: 1px solid var(--semantic-color-border-subtle);
    border-radius: 0.5rem;
  }
}

.plannedContent {
  padding: 2rem;
  background: var(--semantic-color-background-info-subtle);
  border: 1px solid var(--semantic-color-border-info);
  border-radius: 0.5rem;
  color: var(--semantic-color-foreground-info);

  p {
    margin: 0;
  }

  code {
    padding: 0.125rem 0.25rem;
    background: var(--semantic-color-background-primary);
    border-radius: 0.25rem;
    font-family: var(--core-typography-font-family-mono);
  }
}

.placeholder {
  color: var(--semantic-color-foreground-tertiary);
  font-style: italic;
  text-align: center;
}

.apiContent {
  isolation: isolate;
  contain: layout;

  .propsTable,
  .methodsTable {
    position: relative;
    padding: 1.5rem;
    background: var(--semantic-color-background-secondary);
    border: 1px solid var(--semantic-color-border-subtle);
    border-radius: 0.5rem;
    margin-bottom: 2rem;
    contain: layout style;
  }
}

.accessibilityContent {
  .pitfalls {
    margin: 1.5rem 0;
    padding: 1.5rem;
    background: var(--semantic-color-background-warning-subtle);
    border: 1px solid var(--semantic-color-border-warning);
    border-radius: 0.5rem;

    ul {
      margin: 0.5rem 0 0;
      padding-left: 1.5rem;
    }
  }

  .accessibilityChecklist {
    padding: 1.5rem;
    background: var(--semantic-color-background-success-subtle);
    border: 1px solid var(--semantic-color-border-success);
    border-radius: 0.5rem;

    ul {
      margin: 0.5rem 0 0;
      padding-left: 1.5rem;
      list-style: none;

      li {
        margin-bottom: 0.5rem;
        color: var(--semantic-color-foreground-success);
      }
    }
  }
}

// Related card h3 styling (moved here to fix specificity order)
.relatedCard > h3 {
  margin: 0 0 0.5rem;
  color: var(--semantic-color-foreground-primary);
}

.usageContent {
  .dosAndDonts {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;

    @media (width <= 768px) {
      grid-template-columns: 1fr;
    }
  }

  .dos {
    padding: 1.5rem;
    background: var(--semantic-color-background-success-subtle);
    border: 1px solid var(--semantic-color-border-success);
    border-radius: 0.5rem;

    h3 {
      margin-top: 0;
      color: var(--semantic-color-foreground-success);
    }

    ul {
      margin: 0;
      padding-left: 1.5rem;

      li {
        margin-bottom: 0.5rem;
        color: var(--semantic-color-foreground-success);
      }
    }
  }

  .donts {
    padding: 1.5rem;
    background: var(--semantic-color-background-danger-subtle);
    border: 1px solid var(--semantic-color-border-danger);
    border-radius: 0.5rem;

    h3 {
      margin-top: 0;
      color: var(--semantic-color-foreground-danger);
    }

    ul {
      margin: 0;
      padding-left: 1.5rem;

      li {
        margin-bottom: 0.5rem;
        color: var(--semantic-color-foreground-danger);
      }
    }
  }
}

.examplesContent {
  isolation: isolate; // Create new stacking context
  contain: layout;

  .exampleGrid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;

    @media (width <= 768px) {
      grid-template-columns: 1fr;
    }
  }

  .example {
    position: relative;
    isolation: isolate;
    overflow: hidden;
    border: 1px solid var(--semantic-color-border-subtle);
    border-radius: 0.5rem;
    contain: layout style;
    min-height: 300px;

    h3 {
      margin: 0;
      padding: 1rem;
      background: var(--semantic-color-background-secondary);
      border-bottom: 1px solid var(--semantic-color-border-subtle);
      position: relative;
      z-index: 1;
    }
  }
}

.relatedGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1rem;
}

.relatedCard {
  display: block;
  padding: 1.5rem;
  border: 1px solid var(--semantic-color-border-subtle);
  border-radius: 0.5rem;
  color: inherit;
  text-decoration: none;
  transition: all 0.2s ease;

  &:hover {
    background: var(--semantic-color-background-hover);
    border-color: var(--semantic-color-foreground-accent);
    transform: translateY(-2px);
  }

  p {
    margin: 0 0 0.75rem;
    color: var(--semantic-color-foreground-secondary);
    font-size: 0.875rem;
    line-height: 1.4;
  }

  .relatedMeta {
    color: var(--semantic-color-foreground-tertiary);
    font-size: 0.75rem;
    letter-spacing: 0.05em;
    text-transform: uppercase;
  }
}

// CodeSandbox component theming will be handled via CSS custom properties
// These styles are applied at the component level instead of global selectors

// Ensure proper containment and prevent overlapping - moved to main .section rule above
